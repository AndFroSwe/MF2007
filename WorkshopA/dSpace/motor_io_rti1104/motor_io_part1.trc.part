-- ******** Model variables ***************************************************

group "Model Root"
{
 flags: COLLAPSED
}
	group "Pos" -- block-group
	{
	 block: "Outport"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "In1"
		 desc:    ""
		 flags:   SINK|READONLY
		}



	endgroup -- block-group "Pos"

	group "Vel" -- block-group
	{
	 block: "Outport"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "In1"
		 desc:    ""
		 flags:   SINK|READONLY
		}



	endgroup -- block-group "Vel"

	group "SignalSelector[0Square,1Sine]" -- block-group
	{
	 block: "Constant"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		-- Skipping output Out1
		p_1_motor_io_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 flags:   PARAM
		}


	endgroup -- block-group "SignalSelector[0Square,1Sine]"

	group "1//J" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[14]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[16]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "1//J"

	group "Gain" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[7]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "Gain"

	group "Gain1" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[9]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[13]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "Gain1"

	group "Motor viscous friction" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[12]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[15]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "Motor viscous friction"

	group "k//R\n" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[11]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[14]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "k//R\n"

	group "Integrator" -- block-group
	{
	 block: "Integrator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "InitialCondition"
		 flags:   PARAM
		}


	endgroup -- block-group "Integrator"

	group "Integrator1" -- block-group
	{
	 block: "Integrator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "InitialCondition"
		 flags:   PARAM
		}


	endgroup -- block-group "Integrator1"

	group "SinGenerator" -- block-group
	{
	 block: "SignalGenerator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		p_1_motor_io_real_T_0[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Amplitude"
		 flags:   PARAM
		}
		p_1_motor_io_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Frequency"
		 flags:   PARAM
		}


	endgroup -- block-group "SinGenerator"

	group "SquareGenerator" -- block-group
	{
	 block: "SignalGenerator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		p_1_motor_io_real_T_0[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Amplitude"
		 flags:   PARAM
		}
		p_1_motor_io_real_T_0[6]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Frequency"
		 flags:   PARAM
		}


	endgroup -- block-group "SquareGenerator"

	group "Add" -- block-group
	{
	 block: "Sum"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[10]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}


	endgroup -- block-group "Add"

	group "Add1" -- block-group
	{
	 block: "Sum"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[13]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}


	endgroup -- block-group "Add1"

	group "Switch" -- block-group
	{
	 block: "Switch"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}


	endgroup -- block-group "Switch"

  
  
	group "PWM" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}


		group "u1" -- block-group
		{
		 block: "Inport"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "u1"

		group "Enable[1_Off, 0_On]" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "Enable[1_Off, 0_On]"

		group "pwm_offstet" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "pwm_offstet"

		group "Data Type Conversion" -- block-group
		{
		 block: "DataTypeConversion"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_boolean_T_1[0]
			{
			 type:    uint(8)*
			 alias:   "Out1"
			 desc:    ""
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Data Type Conversion"

		group "pwm_skalning" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "pwm_skalning"

		group "Ground1" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground1"

		group "Ground2" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground2"

		group "Ground3" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground3"

		group "Saturation" -- block-group
		{
		 block: "Saturate"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "UpperLimit"
			 flags:   PARAM
			}
			p_1_motor_io_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "LowerLimit"
			 flags:   PARAM
			}


		endgroup -- block-group "Saturation"

		group "Sum" -- block-group
		{
		 block: "Sum"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Sum"

  
  
		group "DS1104BIT_OUT_C0" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104BIT_OUT_C0"
  
  
		group "DS1104SL_DSP_PWM" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104SL_DSP_PWM"


	endgroup -- subsystem-group "PWM"
  
  
	group "RTI Data" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}


	endgroup -- subsystem-group "RTI Data"
  
  
	group "enc I//F" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}

		p_0_motor_io_real_T_0[17]
		{
		 type:    flt(64,IEEE)*
		 alias:   "fi1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_0[18]
		{
		 type:    flt(64,IEEE)*
		 alias:   "w1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		group "Reset enc" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "Reset enc"

		group "fi1_scaling" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "fi1_scaling"

		group "w1_scaling" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "w1_scaling"

  
  
		group "DS1104ENC_POS_C1" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}

			p_0_motor_io_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc position"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_0_motor_io_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc delta position"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}

		endgroup -- subsystem-group "DS1104ENC_POS_C1"
  
  
		group "DS1104ENC_SETUP" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104ENC_SETUP"
  
  
		group "DS1104ENC_SET_POS_C1" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104ENC_SET_POS_C1"


	endgroup -- subsystem-group "enc I//F"




endgroup -- "Model Root"
