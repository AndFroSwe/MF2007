%implements s1_b0_axpwd_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* InitializeConditions for DiscreteTransferFcn: '<Root>/G_fb_real' */
motor_io_velocity_DW.G_fb_real_states = motor_io_velocity_P.G_fb_real_InitialStates;
/* InitializeConditions for DiscreteTransferFcn: '<Root>/Gff_real' */
motor_io_velocity_DW.Gff_real_states = motor_io_velocity_P.Gff_real_InitialStates;
/* InitializeConditions for DiscreteTransferFcn: '<Root>/Gff' */
motor_io_velocity_DW.Gff_states = motor_io_velocity_P.Gff_InitialStates;
/* InitializeConditions for Integrator: '<S1>/Integrator' */
motor_io_velocity_X.Integrator_CSTATE = motor_io_velocity_P.Integrator_IC;
/* InitializeConditions for DiscreteTransferFcn: '<Root>/Gfb' */
motor_io_velocity_DW.Gfb_states = motor_io_velocity_P.Gfb_InitialStates;
/* InitializeConditions for Integrator: '<S1>/Integrator1' */
motor_io_velocity_X.Integrator1_CSTATE = motor_io_velocity_P.Integrator1_IC;
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%endfunction
