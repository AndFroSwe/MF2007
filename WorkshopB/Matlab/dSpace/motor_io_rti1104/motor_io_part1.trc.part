-- ******** Model variables ***************************************************

group "Model Root"
{
 flags: COLLAPSED
}
	group "RS" -- block-group
	{
	 block: "Constant"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		-- Skipping output Out1
		p_1_motor_io_real_T_0[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 flags:   PARAM
		}


	endgroup -- block-group "RS"

	group "Reset enc" -- block-group
	{
	 block: "Constant"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		-- Skipping output Out1
		p_1_motor_io_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 flags:   PARAM
		}


	endgroup -- block-group "Reset enc"

	group "SignalSelector[0Square,1Sine]" -- block-group
	{
	 block: "Constant"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		-- Skipping output Out1
		p_1_motor_io_real_T_0[23]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Value"
		 flags:   PARAM
		}


	endgroup -- block-group "SignalSelector[0Square,1Sine]"

	group "Gain" -- block-group
	{
	 block: "Gain"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_1_motor_io_real_T_0[6]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Gain"
		 flags:   PARAM
		}


	endgroup -- block-group "Gain"

	group "SinGenerator" -- block-group
	{
	 block: "SignalGenerator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[24]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		p_1_motor_io_real_T_0[24]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Amplitude"
		 flags:   PARAM
		}
		p_1_motor_io_real_T_0[25]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Frequency"
		 flags:   PARAM
		}


	endgroup -- block-group "SinGenerator"

	group "SquareGenerator" -- block-group
	{
	 block: "SignalGenerator"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[25]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		p_1_motor_io_real_T_0[26]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Amplitude"
		 flags:   PARAM
		}
		p_1_motor_io_real_T_0[27]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Frequency"
		 flags:   PARAM
		}


	endgroup -- block-group "SquareGenerator"

	group "Switch" -- block-group
	{
	 block: "Switch"
	 desc:  ""
	 flags: BLOCK|COLLAPSED
	}
		p_0_motor_io_real_T_0[26]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Out1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}


	endgroup -- block-group "Switch"

  
  
	group "DC motor" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}

		p_0_motor_io_real_T_0[6]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Position"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_0[7]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Velocity"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		group "Volt" -- block-group
		{
		 block: "Inport"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_2[4]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Volt"

		group "Load inertia" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			 origin:  "J1"
			}


		endgroup -- block-group "Load inertia"

		group "Motor inertia" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "Motor inertia"

		group "Gain1" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[14]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "Gain1"

		group "Gain2" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[19]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "Gain2"

		group "k//R\n" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[15]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "k//R\n"

		group "Integrator" -- block-group
		{
		 block: "Integrator"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[13]
			{
			 type:    flt(64,IEEE)*
			 alias:   "InitialCondition"
			 flags:   PARAM
			}


		endgroup -- block-group "Integrator"

		group "Integrator1" -- block-group
		{
		 block: "Integrator"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[6]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[12]
			{
			 type:    flt(64,IEEE)*
			 alias:   "InitialCondition"
			 flags:   PARAM
			}


		endgroup -- block-group "Integrator1"

		group "Inertias 1//J" -- block-group
		{
		 block: "Product"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Inertias 1//J"

		group "Add" -- block-group
		{
		 block: "Sum"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Add"

		group "Add1" -- block-group
		{
		 block: "Sum"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[18]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Add1"

		group "Add2" -- block-group
		{
		 block: "Sum"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[20]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Add2"

  
  
		group "Karnop friction1" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}

			p_0_motor_io_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Friction"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}

			group "Angular \nvelcoity" -- block-group
			{
			 block: "Inport"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[7]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Angular \nvelcoity"

			group "Applied torque" -- block-group
			{
			 block: "Inport"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[10]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Applied torque"

			group "Abs" -- block-group
			{
			 block: "Abs"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[12]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Abs"

			group "F_c" -- block-group
			{
			 block: "Constant"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				-- Skipping output Out1
				p_1_motor_io_real_T_0[0]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Value"
				 flags:   PARAM
				 origin:  "F_c"
				}


			endgroup -- block-group "F_c"

			group "Vicous friction" -- block-group
			{
			 block: "Gain"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[13]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}
				p_1_motor_io_real_T_0[18]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Gain"
				 flags:   PARAM
				}


			endgroup -- block-group "Vicous friction"

			group "Product" -- block-group
			{
			 block: "Product"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[15]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Product"

			group "Saturate to Fc" -- block-group
			{
			 block: "Saturate"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[11]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}
				p_1_motor_io_real_T_0[1]
				{
				 type:    flt(64,IEEE)*
				 alias:   "UpperLimit"
				 flags:   PARAM
				 origin:  "F_c_upper"
				}
				p_1_motor_io_real_T_0[16]
				{
				 type:    flt(64,IEEE)*
				 alias:   "LowerLimit"
				 flags:   PARAM
				}


			endgroup -- block-group "Saturate to Fc"

			group "Scope2" -- block-group
			{
			 block: "Scope"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[17]
				{
				 type:    flt(64,IEEE)*
				 alias:   "In1"
				 desc:    ""
				 flags:   SINK|READONLY
				}
				p_0_motor_io_boolean_T_1[1]
				{
				 type:    uint(8)*
				 alias:   "In2"
				 desc:    ""
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   SINK|READONLY
				}
				p_0_motor_io_real_T_0[11]
				{
				 type:    flt(64,IEEE)*
				 alias:   "In3"
				 desc:    ""
				 flags:   SINK|READONLY
				}
				p_0_motor_io_real_T_0[16]
				{
				 type:    flt(64,IEEE)*
				 alias:   "In4"
				 desc:    ""
				 flags:   SINK|READONLY
				}
				p_0_motor_io_real_T_0[7]
				{
				 type:    flt(64,IEEE)*
				 alias:   "In5"
				 desc:    ""
				 flags:   SINK|READONLY
				}



			endgroup -- block-group "Scope2"

			group "Sign" -- block-group
			{
			 block: "Signum"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[14]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Sign"

			group "Add" -- block-group
			{
			 block: "Sum"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[16]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Add"

			group "Switch" -- block-group
			{
			 block: "Switch"
			 desc:  ""
			 flags: BLOCK|COLLAPSED
			}
				p_0_motor_io_real_T_0[17]
				{
				 type:    flt(64,IEEE)*
				 alias:   "Out1"
				 desc:    ""
				 flags:   OUTPUT|READONLY
				}


			endgroup -- block-group "Switch"

  
  
			group "Velocity threshold\n" -- subsystem-group
			{
			 flags: COLLAPSED
			 desc:  ""
			}

				p_0_motor_io_boolean_T_1[1]
				{
				 type:    uint(8)*
				 alias:   "y"
				 desc:    ""
				 range:   < 0 ; 1 >
				 bitmask: 0x01
				 flags:   OUTPUT|READONLY
				}

				group "u" -- block-group
				{
				 block: "Inport"
				 desc:  ""
				 flags: BLOCK|COLLAPSED
				}
					p_0_motor_io_real_T_0[12]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Out1"
					 desc:    ""
					 flags:   OUTPUT|READONLY
					}


				endgroup -- block-group "u"

				group "Constant" -- block-group
				{
				 block: "Constant"
				 desc:  ""
				 flags: BLOCK|COLLAPSED
				}
					-- Skipping output Out1
					p_1_motor_io_real_T_0[17]
					{
					 type:    flt(64,IEEE)*
					 alias:   "Value"
					 flags:   PARAM
					}


				endgroup -- block-group "Constant"

				group "Compare" -- block-group
				{
				 block: "RelationalOperator"
				 desc:  ""
				 flags: BLOCK|COLLAPSED
				}
					p_0_motor_io_boolean_T_1[1]
					{
					 type:    uint(8)*
					 alias:   "Out1"
					 desc:    ""
					 range:   < 0 ; 1 >
					 bitmask: 0x01
					 flags:   OUTPUT|READONLY
					}


				endgroup -- block-group "Compare"



			endgroup -- subsystem-group "Velocity threshold\n"

			p_0_motor_io_boolean_T_1[1]
			{
			 type:    uint(8)*
			 alias:   "Activator"
			 bitmask: 0x01
			 range:   < 0 ; 1 >
			 origin:  "motor_io/DC motor/Karnop friction1/Velocity threshold\n/y"
			 flags:   LABEL|READONLY
			}
			p_0_motor_io_real_T_0[17]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Friction"
			 origin:  "motor_io/DC motor/Karnop friction1/Switch/Out1"
			 flags:   LABEL|READONLY
			}
			p_0_motor_io_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Stick slip region\n"
			 origin:  "motor_io/DC motor/Karnop friction1/Saturate to Fc/Out1"
			 flags:   LABEL|READONLY
			}
			p_0_motor_io_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Velocity"
			 origin:  "motor_io/DC motor/Karnop friction1/Angular \nvelcoity/Out1"
			 flags:   LABEL|READONLY
			}
			p_0_motor_io_real_T_0[16]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Viscous region"
			 origin:  "motor_io/DC motor/Karnop friction1/Add/Out1"
			 flags:   LABEL|READONLY
			}

		endgroup -- subsystem-group "Karnop friction1"


	endgroup -- subsystem-group "DC motor"
  
  
	group "PWM" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}


		group "u1" -- block-group
		{
		 block: "Inport"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[2]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "u1"

		group "Enable[1_Off, 0_On]" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[11]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "Enable[1_Off, 0_On]"

		group "pwm_offstet" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[10]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "pwm_offstet"

		group "Data Type Conversion" -- block-group
		{
		 block: "DataTypeConversion"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_boolean_T_1[0]
			{
			 type:    uint(8)*
			 alias:   "Out1"
			 desc:    ""
			 range:   < 0 ; 1 >
			 bitmask: 0x01
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Data Type Conversion"

		group "pwm_skalning" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[4]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[9]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "pwm_skalning"

		group "Ground1" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground1"

		group "Ground2" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground2"

		group "Ground3" -- block-group
		{
		 block: "Ground"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1


		endgroup -- block-group "Ground3"

		group "Saturation" -- block-group
		{
		 block: "Saturate"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[3]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[7]
			{
			 type:    flt(64,IEEE)*
			 alias:   "UpperLimit"
			 flags:   PARAM
			}
			p_1_motor_io_real_T_0[8]
			{
			 type:    flt(64,IEEE)*
			 alias:   "LowerLimit"
			 flags:   PARAM
			}


		endgroup -- block-group "Saturation"

		group "Sum" -- block-group
		{
		 block: "Sum"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}


		endgroup -- block-group "Sum"

  
  
		group "DS1104BIT_OUT_C0" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104BIT_OUT_C0"
  
  
		group "DS1104SL_DSP_PWM" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104SL_DSP_PWM"

		p_0_motor_io_real_T_0[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "Volt"
		 origin:  "motor_io/PWM/Saturation/Out1"
		 flags:   LABEL|READONLY
		}

	endgroup -- subsystem-group "PWM"
  
  
	group "RTI Data" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}


	endgroup -- subsystem-group "RTI Data"
  
  
	group "enc I//F" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}

		p_0_motor_io_real_T_0[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "fi1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_0[23]
		{
		 type:    flt(64,IEEE)*
		 alias:   "w1"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}

		group "Reset enc" -- block-group
		{
		 block: "Constant"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			-- Skipping output Out1
			p_1_motor_io_real_T_0[22]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Value"
			 flags:   PARAM
			}


		endgroup -- block-group "Reset enc"

		group "fi1_scaling" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[1]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[5]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "fi1_scaling"

		group "w1_scaling" -- block-group
		{
		 block: "Gain"
		 desc:  ""
		 flags: BLOCK|COLLAPSED
		}
			p_0_motor_io_real_T_0[23]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Out1"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_1_motor_io_real_T_0[21]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Gain"
			 flags:   PARAM
			}


		endgroup -- block-group "w1_scaling"

  
  
		group "DS1104ENC_POS_C1" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}

			p_0_motor_io_real_T_0[0]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc position"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}
			p_0_motor_io_real_T_0[22]
			{
			 type:    flt(64,IEEE)*
			 alias:   "Enc delta position"
			 desc:    ""
			 flags:   OUTPUT|READONLY
			}

		endgroup -- subsystem-group "DS1104ENC_POS_C1"
  
  
		group "DS1104ENC_SETUP" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104ENC_SETUP"
  
  
		group "DS1104ENC_SET_POS_C1" -- subsystem-group
		{
		 flags: COLLAPSED
		 desc:  ""
		}


		endgroup -- subsystem-group "DS1104ENC_SET_POS_C1"


	endgroup -- subsystem-group "enc I//F"
  
  
	group "Traject_and_Model_function\n1" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}

		p_0_motor_io_real_T_3[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "acceleration"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_3[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "velocity"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_3[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "position"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_3[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "voltFollowing"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_3[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "volt"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_3[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "err"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}



	endgroup -- subsystem-group "Traject_and_Model_function\n1"
  
  
	group "Traject_and_Model_function\n3" -- subsystem-group
	{
	 flags: COLLAPSED
	 desc:  ""
	}

		p_0_motor_io_real_T_2[0]
		{
		 type:    flt(64,IEEE)*
		 alias:   "acceleration"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_2[1]
		{
		 type:    flt(64,IEEE)*
		 alias:   "velocity"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_2[2]
		{
		 type:    flt(64,IEEE)*
		 alias:   "position"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_2[3]
		{
		 type:    flt(64,IEEE)*
		 alias:   "voltFollowing"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_2[4]
		{
		 type:    flt(64,IEEE)*
		 alias:   "volt"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}
		p_0_motor_io_real_T_2[5]
		{
		 type:    flt(64,IEEE)*
		 alias:   "err"
		 desc:    ""
		 flags:   OUTPUT|READONLY
		}



	endgroup -- subsystem-group "Traject_and_Model_function\n3"




endgroup -- "Model Root"
